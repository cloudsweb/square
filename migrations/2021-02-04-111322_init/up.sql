CREATE TABLE users (
  id BIGINT NOT NULL PRIMARY KEY
    GENERATED BY DEFAULT AS IDENTITY,
  alias TEXT NOT NULL UNIQUE, -- unique username
  name TEXT NOT NULL, -- nickname
  email TEXT,
  phone TEXT,
  region TEXT, -- calling code?
  description TEXT,
  avatar TEXT,
  inserted_at TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);
SELECT diesel_manage_updated_at('users');

CREATE TABLE secrets (
  id BIGINT NOT NULL PRIMARY KEY REFERENCES users (id),
  current TEXT NOT NULL,
  salt TEXT NOT NULL, -- use last password as salt
  updated_ip TEXT,
  updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);
SELECT diesel_manage_updated_at('secrets');

-- CREATE FUNCTION new_password(user_id BIGINT, password TEXT) RETURNS TEXT AS $$ BEGIN
--   SELECT CONCAT(current, password) FROM secrets WHERE id == user_id;
-- END; $$ LANGUAGE plpgsql;


CREATE TABLE posts (
  topic_id BIGINT NOT NULL,
  id UUID NOT NULL PRIMARY KEY,
  floor INTEGER NOT NULL,
  author_id BIGINT NOT NULL REFERENCES users (id),
  author_name TEXT NOT NULL,
  content INTEGER NOT NULL,
  revision INTEGER NOT NULL DEFAULT 0,
  -- parent_id UUID REFERENCES posts (id),
  inserted_at TIMESTAMP NOT NULL DEFAULT NOW(),
  updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);
SELECT diesel_manage_updated_at('posts');
